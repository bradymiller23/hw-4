renv::restore()
renv::restore()
packages <- c(
"dplyr",
"readr",
"tidyr",
"purrr",
"stringr",
"corrplot",
"car",
"caret",
"torch",
"nnet",
"broom"
)
# renv::install(packages)
sapply(packages, require, character.only=T)
url <- "https://web.stanford.edu/class/archive/cs/cs109/cs109.1166/stuff/titanic.csv"
df <- url ... # Insert your code here
df <- url # Insert your code here
df <- data.frame(url) # Insert your code here
View(df)
df <- read.csv2(url) # Insert your code here
View(df)
df <- read.csv(url) # Insert your code here
View(df)
df <- df %>%
as.lower(colnames(df))
library(tidyverse)
install.packages('tidyverse')
library(tidyverse)
url <- "https://web.stanford.edu/class/archive/cs/cs109/cs109.1166/stuff/titanic.csv"
df <- read.csv(url) # Insert your code here
df <- df %>%
as.lower(colnames(df))
?as.lower()
?lower()
str_to_lower(c(colnames(df), locale = 'en')
df <- df %>%
df <- df %>%
str_to_lower(colnames(df), locale = 'en')
df <- df %>%
str_to_lower(c(colnames(df)), locale = 'en')
df <- df %>%
str_to_lower(c(colnames(df)))
df <- df %>%
str_to_lower(colnames(df))
g(x,y) <- function(x,y) {
(x - 3)^2 + (y - 4)^2
}
g <- function(x,y) {
(x - 3)^2 + (y - 4)^2
}
grad(g, c(3,4))
?grad()
library(numDeriv)
install.packages('numDeriv')
library(numDeriv)
library(numDeriv)
g <- function(x,y) {
(x - 3)^2 + (y - 4)^2
}
grad(g, c(3,4))
?grad()
library(numDeriv)
g <- function(c(x,y)) {
library(numDeriv)
g <- function(x,y) {
(x - 3)^2 + (y - 4)^2
}
grad(g, 3, 4)
library(numDeriv)
g <- function(x,y) {
(x - 3)^2 + (y - 4)^2
}
grad(g, 3)
library(numDeriv)
g <- function(x) {
(x - 3)^2 + (y - 4)^2
}
grad(g, 3)
library(numDeriv)
g <- function(x,y) {
(x - 3)^2 + (y - 4)^2
}
grad(g, c(3,4))
library(numDeriv)
g <- function(x) {
(x[1] - 3)^2 + (x[2] - 4)^2
}
grad(g, c(3,4))
```
library(tidyverse)
library(tidyverse)
url <- "https://web.stanford.edu/class/archive/cs/cs109/cs109.1166/stuff/titanic.csv"
df <- read.csv(url) # Insert your code here
View(df)
str(df)
colnames(df) <- tolower(colnames(df))
?split()
df <- read.csv(url)
colnames(df) <- strsplit(colnames(df), '\\.')
df <- read.csv(url)
colnames(df)
colnames(df) <- tolower(colnames(df))
colnames(df)[colnames(df) == 'survived' & colnames(df) == 'Siblings.Spouses.Aboard' & colnames(df) == 'Parents.Children.Aboard'] <- c('y', 'Siblings Spouses Aboard', 'Parents Children Aboard')
df <- read.csv(url)
colnames(df) <- tolower(colnames(df))
colnames(df)[colnames(df) == 'survived'] <- 'y'
colnames(df)[colnames(df) == 'Siblings.Spouses.Aboard'] <- 'Siblings Spouses Aboard'
colnames(df)[colnames(df) == 'Parents.Children.Aboard'] <- 'Parents Children Aboard'
df %>% head()
df <- read.csv(url)
colnames(df)[colnames(df) == 'Survived'] <- 'y'
colnames(df)[colnames(df) == 'Siblings.Spouses.Aboard'] <- 'Siblings Spouses Aboard'
colnames(df)[colnames(df) == 'Sarents.Children.Aboard'] <- 'Parents Children Aboard'
colnames(df) <- tolower(colnames(df))
colnames(df)[colnames(df) == 'Parents.Children.Aboard'] <- 'Parents Children Aboard'
df <- read.csv(url)
df <- read.csv(url)
colnames(df)[colnames(df) == 'Survived'] <- 'y'
colnames(df)[colnames(df) == 'Survived'] <- 'y'
colnames(df)[colnames(df) == 'Siblings.Spouses.Aboard'] <- 'Siblings Spouses Aboard'
df <- read.csv(url)
colnames(df)[colnames(df) == 'Survived'] <- 'y'
colnames(df)[colnames(df) == 'Siblings.Spouses.Aboard'] <- 'Siblings Spouses Aboard'
colnames(df)[colnames(df) == 'Parents.Children.Aboard'] <- 'Parents Children Aboard'
colnames(df) <- tolower(colnames(df))
df$y <- as.factor(df$y)
df$sex <- as.factor(ifelse(df$sex == 'male', 1, 0))
df %>% head()
str(df)
df <- read.csv(url)
View(df)
library(tidyverse)
url <- "https://web.stanford.edu/class/archive/cs/cs109/cs109.1166/stuff/titanic.csv"
df <- read.csv(url)
# changing column name of 'Survived'
colnames(df)[colnames(df) == 'Survived'] <- 'y'
# getting rid of . in the column names
colnames(df)[colnames(df) == 'Siblings.Spouses.Aboard'] <- 'Siblings Spouses Aboard'
colnames(df)[colnames(df) == 'Parents.Children.Aboard'] <- 'Parents Children Aboard'
# converting all the column names to lower case
colnames(df) <- tolower(colnames(df))
# changing the y (survived) and sex to factors
df$y <- as.factor(df$y)
df$sex <- as.factor(ifelse(df$sex == 'male', 1, 0))
f <- functioN(z){
f <- function(z){
(z^4) - 6*(z)^2 - 3*z + 4
}
library(torch)
install.packages('torch')
library(torch)
library(torch)
f <- function(z){
(z^4) - 6*(z)^2 - 3*z + 4
}
z_tensor <- torch_tensor(-3.5, requires_grad = TRUE)
f(z_tensor)$backward()
z_tensor$grad()
z_tensor
output <- f(z_tensor)
output
output$backward()
z_tensor$grad()
output$backward()
library(torch)
f <- function(z){
(z^4) - 6*(z)^2 - 3*z + 4
}
z_tensor <- torch_tensor(-3.5, requires_grad = TRUE)
output <- f(z_tensor)
output
f(z_tensor)
f <- function(z){
return((z^4) - 6*(z)^2 - 3*z + 4)
}
z_tensor <- torch_tensor(-3.5, requires_grad = TRUE)
f(z_tensor)
output_tensor <- f(z_tensor)
output_tensor$grad()
library(torch)
f <- function(z){
return((z^4) - 6*(z)^2 - 3*z + 4)
}
z_tensor <- torch_tensor(-3.5, requires_grad = TRUE)
output_tensor <- f(z_tensor)
output_tensor$grad()
library(torch)
f <- function(z){
(z^4) - 6*(z)^2 - 3*z + 4
}
z_tensor <- torch_tensor(-3.5, requires_grad = TRUE)
output_tensor <- f(z_tensor)
output_tensor$grad()
output_tensor$.retain_grad()
output_tensor$grad()
library(torch)
f <- function(z){
(z^4) - 6*(z)^2 - 3*z + 4
}
z_tensor <- torch_tensor(-3.5, requires_grad = TRUE)
output_tensor <- f(z_tensor)
z_tensor$grad()
library(torch)
f <- function(z){
(z^4) - 6*(z)^2 - 3*z + 4
}
z_tensor <- torch_tensor(-3.5, requires_grad = TRUE)
output_tensor <- f(z_tensor)
f(z_tensor)$grad()
library(torch)
f <- function(z){
(z^4) - 6*(z)^2 - 3*z + 4
}
z_tensor <- torch_tensor(-3.5, requires_grad = TRUE)
output_tensor <- f(z_tensor)
f$grad()
library(torch)
f <- function(z){
(z^4) - 6*(z)^2 - 3*z + 4
}
z_tensor <- torch_tensor(-3.5, requires_grad = TRUE)
output_tensor <- f(z_tensor)
f()$grad()
f(z_tensor)$grad()
?corrplot()
library(corrplot)
install.packages('corrplot')
library(corrplot)
?corrplot()
packages <- c(
"dplyr",
"readr",
"tidyr",
"purrr",
"stringr",
"corrplot",
"car",
"caret",
"torch",
"nnet",
"broom"
)
# renv::install(packages)
sapply(packages, require, character.only=T)
library(numDeriv)
g <- function(x) {
(x[1] - 3)^2 + (x[2] - 4)^2
}
grad(g, c(3,4))
######## FIX ME
library(torch)
f <- function(z){
(z^4) - 6*(z)^2 - 3*z + 4
}
z_tensor <- torch_tensor(-3.5, requires_grad = TRUE)
output_tensor <- f(z_tensor)
_______$grad()
library(tidyverse)
install.packages('tidyverse')
packages <- c(
"dplyr",
"readr",
"tidyr",
"purrr",
"stringr",
"corrplot",
"car",
"caret",
"torch",
"nnet",
"broom"
)
# renv::install(packages)
sapply(packages, require, character.only=T)
url <- "https://web.stanford.edu/class/archive/cs/cs109/cs109.1166/stuff/titanic.csv"
df <- read.csv(url)
# changing column name of 'Survived'
colnames(df)[colnames(df) == 'Survived'] <- 'y'
# getting rid of . in the column names
colnames(df)[colnames(df) == 'Siblings.Spouses.Aboard'] <- 'Siblings Spouses Aboard'
colnames(df)[colnames(df) == 'Parents.Children.Aboard'] <- 'Parents Children Aboard'
# converting all the column names to lower case
colnames(df) <- tolower(colnames(df))
# changing the y (survived) and sex to factors
df$y <- as.factor(df$y)
df$sex <- as.factor(ifelse(df$sex == 'male', 1, 0))
View(df)
summary(df)
str(df)
dfCorr <- df %>%
type(age)
dfCorr <- df %>%
oftype(age)
dfCorr <- df %>%
as.type(age)
dfCorr <- df %>%
class(df$age)
?class()
is.numeric(df$age)
is.numeric(df$y)
is.numeric(df$pclass)
is.numeric(df$sex)
is.numeric(df$`sibling spouses aboard`)
is.numeric(df$`siblings spouses aboard`)
is.numeric(df$`siblings spouses aboard`)
is.numeric(df$`parents children aboard`)
is.numeric(df$fare)
str(df)
is.numeric(df$pclass)
numCols <- colnames(df)[which(is.numeric(df$c(colnames(df))) == TRUE)]
dfCorr <- df %>%
select(-c(y, name, sex))
dfCorr
?corrplot()
corrplot(cor(dfCorr), method = 'color')
?cor()
corrplot(cor(dfCorr), method = 'color')
# selecting only numeric
df %>%
select(-c(y, name, sex)) %>%
corrplot(cor(df), method = 'color')
# creating corrplot
corrplot(cor(dfCorr), method = 'color')
?corrplot()
# creating corrplot
corrplot(cor(dfCorr), method = 'color', tl.cex = 1)
# creating corrplot
corrplot(cor(dfCorr), method = 'color', tl.cex = 0.5)
# creating corrplot
corrplot(cor(dfCorr), method = 'color', tl.cex = 0.9)
# creating corrplot
corrplot(cor(dfCorr), method = 'color', tl.cex = 0.9, tl.col = 'black', diag = FALSE)
# creating corrplot
corrplot(cor(dfCorr), method = 'color', tl.cex = 0.9, tl.col = 'black', addgrid.col = 'blue')
# creating corrplot
corrplot(cor(dfCorr), method = 'color', tl.cex = 0.9, tl.col = 'black', addgrid.col = 'black')
# creating corrplot
corrplot(cor(dfCorr), method = 'color', tl.cex = 0.9, tl.col = 'black', order = 'original')
# creating corrplot
corrplot(cor(dfCorr), method = 'color', tl.cex = 0.9, tl.col = 'black', order = 'AOE')
# creating corrplot
corrplot(cor(dfCorr), method = 'color', tl.cex = 0.9, tl.col = 'black', order = 'hclust')
full_model <-  lm(y ~ -name, df)# Insert your code here
summary(full_model)
full_model <-  lm(y ~ (pclass, sex, age, fare, `siblings spouses aboard`,
full_model <-  lm(y ~ pclass, sex, age, fare, `siblings spouses aboard`,
`parents children aboard`, df)
full_model <-  glm(y ~ (df %>% select(-c(name, y)), df)
full_model <-  glm(y ~ (df %>% select(-c(name, y)), data = df, family = binomial())
full_model <-  glm(y ~ (df %>% select(-c(name, y)), data = df, family = binomial())
df2 <- df %>% select(-c(name,y))
View(df2)
full_model <-  glm(y ~., data = df2, family = binomial())
df2 <- df %>% select(-name)
full_model <-  glm(y ~., data = df2, family = binomial())
summary(full_model)
packages <- c(
"dplyr",
"readr",
"tidyr",
"purrr",
"stringr",
"corrplot",
"car",
"caret",
"torch",
"nnet",
"broom"
)
# renv::install(packages)
sapply(packages, require, character.only=T)
library(numDeriv)
g <- function(x) {
(x[1] - 3)^2 + (x[2] - 4)^2
}
grad(g, c(3,4))
######## FIX ME
f <- function(z){
(z^4) - 6*(z)^2 - 3*z + 4
}
z_tensor <- torch_tensor(-3.5, requires_grad = TRUE)
output_tensor <- f(z_tensor)
#_______$grad()
url <- "https://web.stanford.edu/class/archive/cs/cs109/cs109.1166/stuff/titanic.csv"
df <- read.csv(url)
# changing column name of 'Survived'
colnames(df)[colnames(df) == 'Survived'] <- 'y'
# getting rid of . in the column names
colnames(df)[colnames(df) == 'Siblings.Spouses.Aboard'] <- 'Siblings Spouses Aboard'
colnames(df)[colnames(df) == 'Parents.Children.Aboard'] <- 'Parents Children Aboard'
# converting all the column names to lower case
colnames(df) <- tolower(colnames(df))
# changing the y (survived) and sex to factors
df$y <- as.factor(df$y)
df$sex <- as.factor(ifelse(df$sex == 'male', 1, 0))
# selecting only numeric variables
df %>%
select(-c(y, name, sex))
# creating corrplot
corrplot(cor(dfCorr), method = 'color', tl.cex = 0.9, tl.col = 'black',
order = 'hclust')
df2 <- df %>% select(-name)
full_model <-  glm(y ~., data = df2, family = binomial())
summary(full_model)
sessionInfo()
